name: Continuous Linux

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [linux-gcc, linux-clang]
        buildtype: [debug]
        include:
          - name: linux-gcc
            family: linux
            os: ubuntu
            compiler: gcc
          - name: linux-clang
            family: linux
            os: ubuntu
            compiler: clang
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Clang
        uses: egor-tensin/setup-clang@v1
        if: ${{matrix.compiler}} == clang
        with:
          version: latest
          platform: x64

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
          max-size: 1000M

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          appendedCacheKey: ${{matrix.name}}${{matrix.buildtype}}

      - name: Setup test data
        run: |
          ./build/scripts/github.setup.${{matrix.family}}.sh

      - name: Full generation
        env:
          WITH_FULL_GENERATION: ON
          preset: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
        run: |
          cmake -DWITH_FULL_GENERATION=ON --preset ${preset}
          cmake --build --preset ${preset} --target dogen.cli
          cmake -DWITH_FULL_GENERATION=ON --preset ${preset}
          cmake --build --preset ${preset} --target gao
          git add -A 1>/dev/null
          git commit -m "Generated code."

      - name: Run CTest workflow
        env:
          DOGEN_BUILD_PROVIDER: github
          DOGEN_BUILD_COMMIT: ${GITHUB_SHA}
          DOGEN_BUILD_NUMBER: ${GITHUB_RUN_NUMBER}
          DOGEN_BUILD_TIMESTAMP: "`date "+%Y/%m/%d %H:%M:%S"`"
          WITH_FULL_GENERATION: ON
          preset: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
        run: |
          export cmake_args="build_group=Nightly,build_name=${preset},with_presets=ON"
          cmake_args="${cmake_args},code_coverage=1"
          ctest -VV --timeout 12000 --preset ${preset} --script "CTest.cmake,${cmake_args}"
