name: Nightly Create Fullgen Branch

on:
   schedule:
     - cron: '0 0 * * *'

jobs:
  check_changes:
    runs-on: ubuntu-latest
    name: Check latest master commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: check latest commit is less than a day
        id: should_run
        continue-on-error: true
        run: |
          export "latest_commit=`git log -1 --format='%H'`
          echo "Latest commit: ${latest_commit}"
          test -z $(git rev-list --after="24 hours" ${latest_commit}) && echo "should_run=false" >> $GITHUB_OUTPUT

  build:
    needs: [check_changes]
    if: ${{ needs.check_changes.outputs.should_run != 'false' }}
    name: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
    runs-on: ubuntu-latest
    environment: CI
    strategy:
      fail-fast: false
      matrix:
        name: [linux-gcc]
        buildtype: [release]
        include:
          - name: linux-gcc
            family: linux
            compiler: gcc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
          max-size: 1000M

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          appendedCacheKey: ${{matrix.name}}${{matrix.buildtype}}

      - name: Run CTest workflow
        env:
          WITH_FULL_GENERATION: ON
          preset: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
        run: |
          export DOGEN_BUILD_PROVIDER="github"
          export DOGEN_BUILD_COMMIT="${GITHUB_SHA}"
          export DOGEN_BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          export DOGEN_BUILD_TIMESTAMP=`date "+%Y/%m/%d %H:%M:%S"`
          export DOGEN_BUILD_DATE=`date "+%Y%m%d"`
          export cmake_args="build_group=Nightly,preset=${preset},with_full_generation=ON"
          cmake_args="${cmake_args},build_postfix=fg,code_coverage=1"
          ctest -VV --preset ${preset} --script "CTest.cmake,${cmake_args}"
          git config user.name 'MASD bot'
          git config user.email marco.craveiro+masdbot@gmail.com
          git branch -d fullgen || true
          git push origin --delete fullgen || true
          git checkout -b fullgen
          git add -A 1>/dev/null
          git commit -m 'Generated code.' 1>/dev/null
          git push origin fullgen

      - name: Gitter
        if: always()
        uses: juztcode/gitter-github-action@v2
        with:
          room-id: ${{secrets.GITTER_ROOM_ID}}
          token: ${{secrets.GITTER_TOKEN}}
          text: ${{github.workflow}} - ${{job.status}}
