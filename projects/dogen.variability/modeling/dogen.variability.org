#+title: dogen.variability
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
#+tags: { element(e) attribute(a) module(m) }
:PROPERTIES:
:masd.codec.model_modules: dogen.variability
:masd.codec.input_technical_space: cpp
:masd.codec.reference: cpp.builtins
:masd.codec.reference: cpp.std
:masd.codec.reference: cpp.boost
:masd.codec.reference: masd
:masd.codec.reference: masd.variability
:masd.codec.reference: dogen.profiles
:masd.codec.reference: dogen.tracing
:masd.codec.reference: dogen.identification
:masd.variability.profile: dogen.profiles.base.default_profile
:END:

The varibility model is responsible for managing variation in MASD.

One of the core principles of MASD is to enable the development of
"families" of software products; that is, sets of products which share
similar "traits". Those traits are encoded as "configuration" so that
we can talk about them at a higher level of abstraction. This approach
is often referred to in the literature as Software Product Line
Engineering (SPLE). MASD takes a very simplistic view of SPLE,
allowing a very restricted form of variation across a set of
well-defined features. The present model provides the basic
infrastructure required to define features, as well as to read those
features from dynamic data structures.

Note that the present model only concerns itself with the low-level
implementation of variability. You can think of it as a stack, with
this model sitting at the bottom. Above it lie the logical
representation of variability, which enables the code generator to
generate code that makes use of the infrastructure provided by this
model. But the present model is designed to be understood in complete
isolation from the layers above (and in fact, precedes the generalised
approach).

The variability space is indirectly connected to the physical dimension.
The main reason why is because we need to instantiate features across
the geometry of physical space (e.g. "for every facet...", "for every
archetype...", etc). However, we have tried to avoid coupling these two
models together because we do not think that conceptually this coupling
makes sense. That is, it just happens that we instantiate features across
the geometry of physical space, but this is not a concern o veriability -
only of its user. This decoupling was achieved by creating the concept
of template instantiation domains, which are just sets. These are mapped
elsewhere from the geometry of physical space.

UML representation:

\image html dogen.variability/modeling/dogen.variability.svg

* entities                                                           :module:
  :PROPERTIES:
  :custom_id: 46DA526D-03E4-27B4-C52B-AD758B9C20B2
  :END:

Contains all of the types describing variability
with Masd.

** element                                                          :element:
   :PROPERTIES:
   :custom_id: 21D62613-339A-7804-550B-5BAC15A30B16
   :masd.codec.stereotypes: Element
   :END:

Represents an element modeling some aspect of variability.

** feature                                                          :element:
   :PROPERTIES:
   :custom_id: 98C4E3BC-8DB4-0DD4-0E13-6A1C40276BA5
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: FeatureElement
   :END:

Unit of configuration within Dogen. Defines the domain of values.

*** is partially matchable                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

Feature name can be matched partially.

** binding point                                                    :element:
   :PROPERTIES:
   :custom_id: 0E29D529-1570-C334-B82B-5372A519D1D5
   :masd.codec.stereotypes: masd::enumeration, dogen::convertible
   :END:

Determines how a feature can be bound to a modeling element.

*** any                                                           :attribute:

Feature can be configured anywhere.

*** global                                                        :attribute:

Feature can only be configured in the root module.

*** element                                                       :attribute:

Feature can be configured in any modeling element.

*** property                                                      :attribute:

Feature can only be configured in a property of a modeling element.

*** operation                                                     :attribute:

Feature can only be configured in an operation of a modeling element.

** feature model                                                    :element:
   :PROPERTIES:
   :custom_id: 743C0E3E-207F-C274-2243-BBE9D11FCE91
   :END:

Container of all available features, organised for querying.

*** all                                                           :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<feature>
    :END:

*** by name                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, feature>
    :END:

Features by qualified name.

*** partially matchable                                           :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, feature>
    :END:

Features that can be partially matcheable, by qualified name.

** feature template                                                 :element:
   :PROPERTIES:
   :custom_id: D67AD973-FF5B-E9C4-DE63-3A42926A473B
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: FeatureElement, Templateable
   :END:

Defines a template that can be used to instantiate features.

*** default value overrides                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<default_value_override>
    :END:

Overrides for the default value, if any.

** value type                                                       :element:
   :PROPERTIES:
   :custom_id: 0B23C061-58CB-6084-D623-CCC88F26AD87
   :masd.codec.stereotypes: masd::enumeration, dogen::convertible
   :END:

What values can a feature have.

*** text                                                          :attribute:

Represents a text value.

*** text collection                                               :attribute:

Represents a collection of text values.

*** number                                                        :attribute:

Represents a numeric integral value.

*** boolean                                                       :attribute:

Represents a boolean value.

*** key value pair                                                :attribute:

Represents a pair of key and value.

*** comma separated                                               :attribute:

Represents a CSV input that is split into a collection of text values.

*** comma separated collection                                    :attribute:

Represents a collection of CSV input that is split into a collection of text values.

** profile template                                                 :element:
   :PROPERTIES:
   :custom_id: EE9F58C3-5A6A-C674-55A3-64563E006AB6
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: Profilable
   :END:

Holds a set of templates for configuration points.

*** templates                                                     :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<configuration_point_template>
    :END:

** configuration point template                                     :element:
   :PROPERTIES:
   :custom_id: 6E8202C1-A7C7-8AE4-C13B-3C68F3A13CB0
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: Templateable
   :END:

*** untyped value                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::string>
    :END:

** value                                                            :element:
   :PROPERTIES:
   :custom_id: 3CAB493D-4916-38F4-4043-CE96EF8DBF62
   :masd.codec.stereotypes: masd::visitable
   :END:

Base class of all value types.

Represents a value for a configuration point, a default value for a feature, etc.

** number                                                           :element:
   :PROPERTIES:
   :custom_id: 8025E3ED-4F07-1134-8C53-F347292E7BC0
   :masd.codec.parent: entities::value
   :END:

Represents a numeric integral value.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: int
    :END:

** text                                                             :element:
   :PROPERTIES:
   :custom_id: 8A9A3038-BBDF-E274-49F3-02AE071F0EF3
   :masd.codec.parent: entities::value
   :END:

Represents a text value.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

** text collection                                                  :element:
   :PROPERTIES:
   :custom_id: 78E8B05B-FE4C-8504-8C4B-A4B749296335
   :masd.codec.parent: entities::value
   :END:

Represents a collection of text values.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::string>
    :END:

** boolean                                                          :element:
   :PROPERTIES:
   :custom_id: 5B208894-EA10-9C94-17E3-E5ACAFCCBB95
   :masd.codec.parent: entities::value
   :END:

Represents a boolean value.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

** key value pair                                                   :element:
   :PROPERTIES:
   :custom_id: 69CF9E10-ED7D-7C04-A573-7D31AB8A6B57
   :masd.codec.parent: entities::value
   :END:

Represents a pair of key and value.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::pair<std::string, std::string>>
    :END:

#+begin_src mustache
The data structure was chosen to guarantee that the order is maintained from
source.
#+end_src

** configuration                                                    :element:
   :PROPERTIES:
   :custom_id: B8F335CC-BCAB-8E64-AFFB-A7DF6FC87841
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: ConfigurationStore
   :END:

*** profile bindings                                              :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<potential_binding>
    :END:

Bindings to profiles.

*** configuration bindings                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<potential_binding>
    :END:

Relationships between this bound configuration and other bound configurations.

These relationships are inferred from the relationships of the underlying model
elements.

*** source binding point                                          :attribute:
    :PROPERTIES:
    :masd.codec.type: binding_point
    :END:

Where was this configuration sourced from with regards to binding.

*** from target                                                   :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

If true, this configuration was sourced from an element in the target model.

** configuration point                                              :element:
   :PROPERTIES:
   :custom_id: 15BD6F5F-AA32-7984-618B-46C1F24068E1
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: Valuable
   :END:

Maps a feature name to an instance value

** Nameable                                                         :element:
   :PROPERTIES:
   :custom_id: D578283E-7BC6-2C84-1243-C38690AE17E4
   :masd.codec.stereotypes: masd::object_template
   :END:

Elements with the ability of being named.

*** name                                                          :attribute:
    :PROPERTIES:
    :masd.codec.type: identification::entities::name
    :END:

Name of this variability element.

** Describable                                                      :element:
   :PROPERTIES:
   :custom_id: DB744B9A-5E7B-A434-47D3-E7B21F4CBEC0
   :masd.codec.stereotypes: masd::object_template
   :END:

*** description                                                   :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

Human readable description of the feature, used for documentation.

** Element                                                          :element:
   :PROPERTIES:
   :custom_id: 56E4D404-723D-89D4-6DF3-D61DD353C4FF
   :masd.codec.parent: entities::Nameable, entities::Describable
   :masd.codec.stereotypes: masd::object_template
   :END:

** Defaultable                                                      :element:
   :PROPERTIES:
   :custom_id: 640207D8-A13E-1B54-FEC3-F51C410F0F31
   :masd.codec.stereotypes: masd::object_template
   :END:

*** default value                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: boost::shared_ptr<value>
    :END:

Default value for element, if any.

** Typeable                                                         :element:
   :PROPERTIES:
   :custom_id: 093F396A-9390-9A84-FE93-224FDE6B864C
   :masd.codec.stereotypes: masd::object_template
   :END:

*** value type                                                    :attribute:
    :PROPERTIES:
    :masd.codec.type: value_type
    :END:

Type of the value for the feature that will result of the template instantiation.

** BindActionable                                                   :element:
   :PROPERTIES:
   :custom_id: 286975CF-F0F9-D844-A283-B8B615C443E7
   :masd.codec.stereotypes: masd::object_template
   :END:

*** profile binding action                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: binding_action
    :END:

*** configuration binding action                                  :attribute:
    :PROPERTIES:
    :masd.codec.type: binding_action
    :END:

** Bindable                                                         :element:
   :PROPERTIES:
   :custom_id: 5B676AE4-E4FC-0844-AED3-3219FCDE2745
   :masd.codec.stereotypes: masd::object_template
   :END:

*** binding point                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: binding_point
    :END:

How the feature binds against other model elements.

** FeatureElement                                                   :element:
   :PROPERTIES:
   :custom_id: 9E314B1E-A28B-4C54-5C5B-91A3E0D15ABF
   :masd.codec.parent: entities::Element, entities::Defaultable, entities::Typeable, entities::BindActionable, entities::Bindable
   :masd.codec.stereotypes: masd::object_template
   :END:

** Templateable                                                     :element:
   :PROPERTIES:
   :custom_id: 6C395A42-5514-80A4-37E3-4B3AF8963DA1
   :masd.codec.stereotypes: masd::object_template
   :END:

*** instantiation domain name                                     :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

Name of the domain to use for template instantiation.

@pre The instantiation domain name must exist.

** Valuable                                                         :element:
   :PROPERTIES:
   :custom_id: D4AA2894-26CC-37C4-8C53-05015C480B20
   :masd.codec.stereotypes: masd::object_template
   :END:

*** value                                                         :attribute:
    :PROPERTIES:
    :masd.codec.type: boost::shared_ptr<value>
    :END:

Value that has been assigned to this element.

** ConfigurationStore                                               :element:
   :PROPERTIES:
   :custom_id: BD110F7B-6AA2-5434-D213-FD2C28849899
   :masd.codec.stereotypes: masd::object_template
   :END:

*** configuration points                                          :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, configuration_point>
    :END:

All configuration points associated with this element.

** profile                                                          :element:
   :PROPERTIES:
   :custom_id: 7FDD4EA7-0B56-67C4-C9E3-336A061F26D3
   :masd.codec.parent: entities::element
   :masd.codec.stereotypes: ConfigurationStore, Profilable
   :END:

*** merged                                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

If true, the profile has been merged with all of its parents.

*** base layer profile                                            :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

Which base layer does this profile rely on, if any.

** binding action                                                   :element:
   :PROPERTIES:
   :custom_id: F92A2AD8-C320-E2B4-E1DB-6447166F8F50
   :masd.codec.stereotypes: masd::enumeration
   :END:

What action to take when binding.

*** ignore                                                        :attribute:

Ignores the implict relationship.

*** copy                                                          :attribute:

Copy across the value of the feature from the related element

** profile repository                                               :element:
   :PROPERTIES:
   :custom_id: AA3571BF-6EFA-4224-2F83-DE5504D8AFB9
   :END:

*** by name                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, profile>
    :END:

*** by stereotype                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, profile>
    :END:

** configuration model set                                          :element:
   :PROPERTIES:
   :custom_id: 50DD40AE-E71A-68A4-2ABB-63CCB43F6680
   :END:

*** models                                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<configuration_model>
    :END:

** configuration model                                              :element:
   :PROPERTIES:
   :custom_id: BDFC09FF-6BBA-9054-5C1B-C2DD8CDA7684
   :END:

*** global                                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: boost::shared_ptr<configuration>
    :END:

*** local                                                         :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, boost::shared_ptr<configuration>>
    :END:

** profile template repository                                      :element:
   :PROPERTIES:
   :custom_id: 42DEF709-1808-95E4-23AB-BFCE04B81533
   :END:

*** templates                                                     :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<profile_template>
    :END:

** potential binding                                                :element:
   :PROPERTIES:
   :custom_id: B9F10AF8-1BE8-AD54-C5EB-60302076C56B
   :END:

Contains information about a potential binding.

*** name                                                          :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

The name to bind to. This can represent a profile or configuration name, or an
alias.

*** realized                                                      :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

If true, the potential binding was realised into an actual binding.

** feature template repository                                      :element:
   :PROPERTIES:
   :custom_id: 54042E8C-0440-B8A4-2513-30A0396ACA87
   :END:

Stores a set of feature templates.

*** templates                                                     :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<feature_template>
    :END:

** feature repository                                               :element:
   :PROPERTIES:
   :custom_id: C54A388F-6C17-81F4-3193-609260F6DBA3
   :END:

Stores a set of features.

*** features                                                      :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<feature>
    :END:

** default value override                                           :element:
   :PROPERTIES:
   :custom_id: A0D8486F-F7CB-D6E4-6363-C9681132B2D9
   :END:

Stores an override for a default value.

*** key ends with                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

*** default value                                                 :attribute:
    :PROPERTIES:
    :masd.codec.type: boost::shared_ptr<value>
    :END:

** Generalizable                                                    :element:
   :PROPERTIES:
   :custom_id: 3C5462D4-4B08-84F4-3F8B-5F9548995C9A
   :masd.codec.stereotypes: masd::object_template
   :END:

*** parents                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::string>
    :END:

** Stereotypable                                                    :element:
   :PROPERTIES:
   :custom_id: 9DBEA7BD-3367-D704-6AFB-165BBFFED347
   :masd.codec.stereotypes: masd::object_template
   :END:

*** stereotype                                                    :attribute:
    :PROPERTIES:
    :masd.codec.type: std::string
    :END:

** Profilable                                                       :element:
   :PROPERTIES:
   :custom_id: 77F9ADBB-3A81-36C4-9AFB-750789BDD996
   :masd.codec.parent: entities::Bindable, entities::Generalizable, entities::Stereotypable
   :masd.codec.stereotypes: masd::object_template
   :END:

** comma separated                                                  :element:
   :PROPERTIES:
   :custom_id: 610BA87F-C95B-B924-A4CB-860A75AD68EA
   :masd.codec.parent: entities::value
   :END:

Represents a CSV input that is split into a collection of text values.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::string>
    :END:

** comma separated collection                                       :element:
   :PROPERTIES:
   :custom_id: CC5A4F4E-2E12-D794-8023-32B73204A00D
   :masd.codec.parent: entities::value
   :END:

Represents a collection of CSV input that is split into a collection of text values.

*** content                                                       :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<std::list<std::string>>
    :END:

* helpers                                                            :module:
  :PROPERTIES:
  :custom_id: 1B0E6892-A935-B654-52E3-57E71A5E1630
  :END:

** feature selector                                                 :element:
   :PROPERTIES:
   :custom_id: BD9085BB-3008-11A4-EB73-46A1DFDA69E8
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** configuration factory                                            :element:
   :PROPERTIES:
   :custom_id: 7C89E2B3-1F05-0AD4-E853-1377BA5EEC1A
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** configuration point merger                                       :element:
   :PROPERTIES:
   :custom_id: 7FC67C4F-8D76-A894-1C2B-292499529F7A
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** value factory                                                    :element:
   :PROPERTIES:
   :custom_id: C2D81F67-0E43-DEE4-E44B-6002BC467F9F
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** building exception                                               :element:
   :PROPERTIES:
   :custom_id: C2E2AA07-0C9A-3204-D673-9C76680BBDA1
   :masd.codec.stereotypes: masd::exception
   :END:

** selection exception                                              :element:
   :PROPERTIES:
   :custom_id: D086B333-E713-7E04-5C63-9E5B92A26BA5
   :masd.codec.stereotypes: masd::exception
   :END:

** configuration selector                                           :element:
   :PROPERTIES:
   :custom_id: 751775A4-A85A-8E24-B573-A182CA91E930
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** template instantiator                                            :element:
   :PROPERTIES:
   :custom_id: E3CCC864-D9F8-A1B4-D14B-A3CD8BA11C2B
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** instantiation exception                                          :element:
   :PROPERTIES:
   :custom_id: 162D16C8-118E-3634-048B-8ED549553F08
   :masd.codec.stereotypes: masd::exception
   :END:

An error occurred whilst instantiating templates.

** registrar                                                        :element:
   :PROPERTIES:
   :custom_id: 42332941-4CCD-BC04-411B-AD06E8689237
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

*** templates repository                                          :attribute:
    :PROPERTIES:
    :masd.codec.type: entities::feature_template_repository
    :END:

*** features repository                                           :attribute:
    :PROPERTIES:
    :masd.codec.type: entities::feature_repository
    :END:

** enum mapper                                                      :element:
   :PROPERTIES:
   :custom_id: DBF439D7-D8E5-CDA4-7B53-D07792E47805
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** enum mapping exception                                           :element:
   :PROPERTIES:
   :custom_id: 5A7DF6CC-03C0-45B4-65A3-5830E6675AD1
   :masd.codec.stereotypes: masd::exception
   :END:

An error occurred whilst mapping enums to or from strings.

** relational adapter                                               :element:
   :PROPERTIES:
   :custom_id: DB873E81-C1B0-6654-A693-C6538AA0F944
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** adaption exception                                               :element:
   :PROPERTIES:
   :custom_id: D1F004F7-8DC7-BB94-EC2B-EAF8714375F1
   :masd.codec.stereotypes: masd::exception
   :END:

An error occurred whilst adapting a model.

** configuration points factory                                     :element:
   :PROPERTIES:
   :custom_id: B78DD7BF-16AB-1874-8C1B-9175AB0D7181
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** merging exception                                                :element:
   :PROPERTIES:
   :custom_id: 4C368A20-7E57-6DE4-E8EB-1CFBF5FC29FC
   :masd.codec.stereotypes: masd::exception
   :END:

An error occurred whilst merging.

* transforms                                                         :module:
  :PROPERTIES:
  :custom_id: 762C373E-0404-6CD4-9EB3-F8F129E03515
  :END:

** feature model production chain                                   :element:
   :PROPERTIES:
   :custom_id: D77706D9-6243-AB04-84C3-309C8C95BED6
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** feature template instantiation transform                         :element:
   :PROPERTIES:
   :custom_id: 77DA8E48-6791-65E4-638B-35836B7E23E9
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** feature model transform                                          :element:
   :PROPERTIES:
   :custom_id: EA1976BE-C455-B884-E6B3-B6FE42123B0B
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** profile repository production chain                              :element:
   :PROPERTIES:
   :custom_id: 09FE83D7-6198-0ED4-678B-7A76D28F1D4B
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** profile template instantiation transform                         :element:
   :PROPERTIES:
   :custom_id: 77446D4A-B0CF-3C04-A783-F251F7C11638
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** profile binding transform                                        :element:
   :PROPERTIES:
   :custom_id: A1CE11C9-50B7-5784-55B3-417F766227B0
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** context                                                          :element:
   :PROPERTIES:
   :custom_id: 25F714AD-132D-82F4-6293-E6D429A3B399
   :masd.codec.stereotypes: dogen::typeable, dogen::pretty_printable
   :END:

Context for transformations.

*** compatibility mode                                            :attribute:
    :PROPERTIES:
    :masd.codec.type: bool
    :END:

*** template instantiation domains                                :attribute:
    :PROPERTIES:
    :masd.codec.type: std::unordered_map<std::string, std::vector<std::string>>
    :END:

Provides all of the domains to be used for template instantiation.

Example of a domain is "masd.facet" which contains the list of all available facets.
Templates (facet and profile) are then instantiated over this range, depending on
user choices.

*** tracer                                                        :attribute:
    :PROPERTIES:
    :masd.codec.type: boost::shared_ptr<tracing::tracer>
    :END:

** profile merging transform                                        :element:
   :PROPERTIES:
   :custom_id: F6C1A4A4-0F25-70A4-0EC3-A52D41C1ED43
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** transformation error                                             :element:
   :PROPERTIES:
   :custom_id: 0CC8222B-C812-A834-9A9B-070091CA66FD
   :masd.codec.stereotypes: masd::exception
   :END:

An error occurred whilst applying a transformation.

** global configuration binding transform                           :element:
   :PROPERTIES:
   :custom_id: C9C67C21-F57D-C904-AE1B-1DA435D9BAEA
   :masd.codec.stereotypes: dogen::handcrafted::typeable
   :END:

** profile repository inputs                                        :element:
   :PROPERTIES:
   :custom_id: 34808F95-8260-2D04-8D9B-FE5BB6A45140
   :END:

*** profiles                                                      :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<entities::profile>
    :END:

*** templates                                                     :attribute:
    :PROPERTIES:
    :masd.codec.type: std::list<entities::profile_template>
    :END:

* features                                                           :module:
  :PROPERTIES:
  :custom_id: FB4C3D05-B57A-8D34-65B3-7D34546BD038
  :END:

Features used by the variability model.

** profile                                                          :element:
   :PROPERTIES:
   :custom_id: 16AC75EE-8D88-FD64-C223-53A2E61C50BC
   :masd.variability.default_binding_point: any
   :masd.variability.key_prefix: masd.variability
   :masd.codec.stereotypes: masd::variability::feature_bundle
   :END:

Features related to profile processing.

*** profile                                                       :attribute:
    :PROPERTIES:
    :masd.variability.is_optional: true
    :masd.codec.type: masd::variability::text
    :END:

Profile associated with this configuration.

** initializer                                                      :element:
   :PROPERTIES:
   :custom_id: 7534EF59-A0A1-0714-C053-E187A13C7B7A
   :masd.codec.stereotypes: masd::variability::initializer
   :END:

* registrar                                                         :element:
  :PROPERTIES:
  :custom_id: 69097D84-89DF-E204-7063-C7C62781AFE2
  :masd.codec.stereotypes: masd::serialization::type_registrar
  :END:

* main                                                              :element:
  :PROPERTIES:
  :custom_id: EDA88542-67F3-5B04-5673-5D9243627E78
  :masd.codec.stereotypes: masd::entry_point, dogen::untypable
  :END:

* CMakeLists                                                        :element:
  :PROPERTIES:
  :custom_id: 840A2839-3F6C-1844-48D3-C4577EBB7417
  :masd.codec.stereotypes: masd::build::cmakelists, dogen::handcrafted::cmake
  :END:
